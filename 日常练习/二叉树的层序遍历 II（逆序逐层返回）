/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) 
    {
        vector<vector<int>> slout;
        if(!root)
            return slout;
        vector<TreeNode*> v1,v2;
        v1.push_back(root);
        while(!v1.empty())
        {   
            vector<int> tmp;
            for(auto&x:v1)
            {   
                tmp.push_back(x->val);
                if(x->left)
                    v2.push_back(x->left);
                if(x->right)
                    v2.push_back(x->right);
            }
            slout.push_back(tmp);
            v1.clear();
            v1.swap(v2);//注意避免深拷贝
        }
       reverse(slout.begin(),slout.end());
       return slout;
    }
};